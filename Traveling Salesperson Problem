import itertools

# Function to calculate the total distance of a tour
def total_distance(tour, distances):
    distance = 0
    for i in range(len(tour) - 1):
        distance += distances[tour[i]][tour[i + 1]]
    distance += distances[tour[-1]][tour[0]]  # Return to the starting city
    return distance

# Function to solve TSP using brute-force
def tsp_bruteforce(distances):
    num_cities = len(distances)
    cities = list(range(num_cities))
    shortest_tour = None
    shortest_distance = float('inf')

    for tour in itertools.permutations(cities):
        distance = total_distance(tour, distances)
        if distance < shortest_distance:
            shortest_distance = distance
            shortest_tour = tour

    return shortest_tour, shortest_distance

# Example usage
if __name__ == "__main__":
    # Define the distances between cities (replace with your own data)
    distances = [
        [0, 29, 20, 21],
        [29, 0, 15, 17],
        [20, 15, 0, 28],
        [21, 17, 28, 0]
    ]

    shortest_tour, shortest_distance = tsp_bruteforce(distances)

    print(f"Shortest tour: {shortest_tour}")
    print(f"Shortest distance: {shortest_distance}")
